{"version":3,"file":"main.db18e25076d1a36f.hot-update.js","sources":["file:///Users/sakamaki/Documents/product/CalorieCalculation/src/App.tsx","file:///Users/sakamaki/Documents/product/CalorieCalculation/src/components/auth/ProfileSetupScreen.tsx","file://webpack/runtime/get_full_hash","file://webpack/runtime/lynx css hot update"],"sourcesContent":["import { useEffect, useCallback } from '@lynx-js/react'\nimport { AuthProvider, useAuth } from './contexts/AuthContext.js'\nimport { TabNavigation } from './components/TabNavigation.js'\nimport { AuthScreen } from './components/auth/AuthScreen.js'\nimport { ProfileSetupScreen } from './components/auth/ProfileSetupScreen.js'\nimport './App.css'\n\nfunction AppContent(props: { onRender?: () => void }) {\n  const { user, loading, needsProfileSetup, saveUserProfile } = useAuth();\n\n  useEffect(() => {\n    console.info('CalorieCalculation App Started')\n  }, [])\n\n  useEffect(() => {\n    console.log('App state - user:', !!user, 'loading:', loading, 'needsProfileSetup:', needsProfileSetup);\n  }, [user, loading, needsProfileSetup]);\n\n  const handleProfileComplete = useCallback(async (profile: any) => {\n    'background only';\n    console.log('handleProfileComplete called with:', profile);\n    try {\n      await saveUserProfile(profile);\n      console.log('Profile saved successfully');\n    } catch (error) {\n      console.error('プロフィール保存失敗:', error);\n    }\n  }, [saveUserProfile]);\n\n  // 認証状態をロード中の場合\n  if (loading) {\n    return (\n      <view className=\"app-container\">\n        <view className=\"loading-screen\">\n          <text className=\"loading-text\">読み込み中...</text>\n        </view>\n      </view>\n    );\n  }\n\n  // 認証されていない場合は認証画面を表示\n  if (!user) {\n    return (\n      <view className=\"app-container\">\n        <AuthScreen />\n      </view>\n    );\n  }\n\n  // ログイン済みだがプロフィール未設定の場合はプロフィール設定画面を表示\n  if (needsProfileSetup) {\n    return (\n      <view className=\"app-container\">\n        <ProfileSetupScreen onComplete={handleProfileComplete} />\n      </view>\n    );\n  }\n\n  // 認証済み且つプロフィール設定済みの場合はメインアプリを表示\n  return (\n    <view className=\"app-container\">\n      <TabNavigation onRender={props.onRender} />\n    </view>\n  );\n}\n\nexport function App(props: {\n  onRender?: () => void\n}) {\n  return (\n    <AuthProvider>\n      <AppContent onRender={props.onRender} />\n    </AuthProvider>\n  )\n}\n","import { useState, useCallback } from '@lynx-js/react';\nimport { InputField } from '../common/InputField.js';\n\ninterface UserProfile {\n  height: string;\n  weight: string;\n  age: string;\n  gender: string;\n  activityLevel: string;\n}\n\ninterface ProfileSetupScreenProps {\n  onComplete: (profile: UserProfile) => void;\n}\n\nexport function ProfileSetupScreen({ onComplete }: ProfileSetupScreenProps) {\n  const [profile, setProfile] = useState<UserProfile>({\n    height: '',\n    weight: '',\n    age: '',\n    gender: '',\n    activityLevel: ''\n  });\n\n  const handleInputChange = useCallback((field: keyof UserProfile, value: string) => {\n    'background only';\n    setProfile(prev => ({ ...prev, [field]: value }));\n  }, []);\n\n  const handleGenderSelect = useCallback((gender: string) => {\n    'background only';\n    setProfile(prev => ({ ...prev, gender }));\n  }, []);\n\n  const handleActivitySelect = useCallback((activityLevel: string) => {\n    'background only';\n    setProfile(prev => ({ ...prev, activityLevel }));\n  }, []);\n\n  const isFormValid = profile.height && profile.weight && profile.age && profile.gender && profile.activityLevel;\n\n  const handleComplete = useCallback(() => {\n    'background only';\n    console.log('Complete button clicked, profile:', profile);\n    console.log('Form valid:', isFormValid);\n    if (isFormValid) {\n      console.log('Calling onComplete with profile');\n      onComplete(profile);\n    } else {\n      console.log('Form is not valid, cannot complete');\n    }\n  }, [profile, onComplete, isFormValid]);\n\n  return (\n    <view className=\"profile-setup-screen\">\n      <view className=\"profile-setup-header\">\n        <text className=\"profile-setup-title\">プロフィール設定</text>\n        <text className=\"profile-setup-subtitle\">より正確なカロリー計算のため、基本情報を入力してください</text>\n      </view>\n\n      <view className=\"profile-setup-scroll\">\n        <view className=\"profile-setup-form\">\n          <view className=\"form-group\">\n            <text className=\"form-label\">身長 (cm)</text>\n            <InputField\n              value={profile.height}\n              placeholder=\"例: 170\"\n              type=\"text\"\n              className=\"profile-input\"\n              onInput={(value) => handleInputChange('height', value)}\n            />\n          </view>\n\n          <view className=\"form-group\">\n            <text className=\"form-label\">体重 (kg)</text>\n            <InputField\n              value={profile.weight}\n              placeholder=\"例: 65\"\n              type=\"text\"\n              className=\"profile-input\"\n              onInput={(value) => handleInputChange('weight', value)}\n            />\n          </view>\n\n          <view className=\"form-group\">\n            <text className=\"form-label\">年齢</text>\n            <InputField\n              value={profile.age}\n              placeholder=\"例: 25\"\n              type=\"text\"\n              className=\"profile-input\"\n              onInput={(value) => handleInputChange('age', value)}\n            />\n          </view>\n\n          <view className=\"form-group\">\n            <text className=\"form-label\">性別</text>\n            <view className=\"gender-buttons\">\n              <view \n                className={`gender-button ${profile.gender === 'male' ? 'selected' : ''}`}\n                bindtap={() => handleGenderSelect('male')}\n              >\n                <text className=\"gender-button-text\">男性</text>\n              </view>\n              <view \n                className={`gender-button ${profile.gender === 'female' ? 'selected' : ''}`}\n                bindtap={() => handleGenderSelect('female')}\n              >\n                <text className=\"gender-button-text\">女性</text>\n              </view>\n            </view>\n          </view>\n\n          <view className=\"form-group\">\n            <text className=\"form-label\">活動レベル</text>\n            <view className=\"activity-buttons\">\n              <view \n                className={`activity-button ${profile.activityLevel === 'sedentary' ? 'selected' : ''}`}\n                bindtap={() => handleActivitySelect('sedentary')}\n              >\n                <text className=\"activity-button-text\">低い</text>\n                <text className=\"activity-button-desc\">デスクワーク中心</text>\n              </view>\n              <view \n                className={`activity-button ${profile.activityLevel === 'light' ? 'selected' : ''}`}\n                bindtap={() => handleActivitySelect('light')}\n              >\n                <text className=\"activity-button-text\">やや低い</text>\n                <text className=\"activity-button-desc\">軽い運動時々</text>\n              </view>\n              <view \n                className={`activity-button ${profile.activityLevel === 'moderate' ? 'selected' : ''}`}\n                bindtap={() => handleActivitySelect('moderate')}\n              >\n                <text className=\"activity-button-text\">普通</text>\n                <text className=\"activity-button-desc\">定期的な運動</text>\n              </view>\n              <view \n                className={`activity-button ${profile.activityLevel === 'active' ? 'selected' : ''}`}\n                bindtap={() => handleActivitySelect('active')}\n              >\n                <text className=\"activity-button-text\">高い</text>\n                <text className=\"activity-button-desc\">激しい運動習慣</text>\n              </view>\n            </view>\n          </view>\n\n          <view className=\"profile-setup-buttons\">\n            <view \n              className={`complete-button ${isFormValid ? '' : 'disabled'}`}\n              bindtap={handleComplete}\n            >\n              <text className=\"complete-button-text\">完了</text>\n            </view>\n          </view>\n        </view>\n      </view>\n    </view>\n  );\n}","__webpack_require__.h = () => (\"bf35bc7967420e0a\")","\n__webpack_require__.cssHotUpdateList = [[\"main\",\".rspeedy/main/main.db18e25076d1a36f.css.hot-update.json\"]];\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AA2BA;;AACA;;;AACA;;;;;;;;;;;;;;AASA;;;;;;;;AASA;;;;;;;;AAQA;;;;;AArDA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;;;;;AAUA;AACA;AAGA;;;;;;;;;;AAKA;AACA;AAGA;AAAA;;;;;;;;;;;AAKA;AACA;AAEA;AAAA;;;;;;;;;;;AAGA;AAEA;AAGA;AAEA;AAAA;;;;;;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;;;;AAqDA;;AACA;;;AACA;;;;;AACA;;;;;AAGA;;;AACA;;;AACA;;;AACA;;;;;;;AAUA;;;AACA;;;;;;;AAUA;;;AACA;;;;;;;AAUA;;;AACA;;;;;AACA;;;;;AAKA;;;;;;;AAMA;;;;;AAKA;;;AACA;;;;;AACA;;;;;AAKA;;;;;AACA;;;;;;;AAMA;;;;;AACA;;;;;;;AAMA;;;;;AACA;;;;;;;AAMA;;;;;AACA;;;;;AAKA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;;AA8CA;AACA;AAKA;AACA;AAWA;AACA;AAMA;AACA;AAMA;AACA;AAMA;AACA;AAUA;AACA;;;;AAtFA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAoEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/JA;;;;ACAA;AACA"}